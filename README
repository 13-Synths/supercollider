New SC documentation system, work in progress
=============================================
Much more information can be read here: https://docs.google.com/document/edit?id=13jY-FLhwFYgzGFVTSb31eTZOsxl77eVLxuCIsXcZ7BE&hl=en&authkey=CJu58MQJ

The markup language parser is in ScDoc.sc, copy or symlink this to your Extensions folder.
Try it like this:

p = ScDocParser.new
p.parse("/home/lijon/Coding/ScDoc/test.sch")
p.dump


TODO
====
- change inline tags[[...]] to this::...:: to be syntactically consistent?
would need some magic to distinguish code:: blocks from inline code::
but, it would be a bit confusing that block-tags close with ::tag while inline-tags close with :: only?

- we should handle tabs in a consistent way.. regard them as whitespace? but then we need to pass them through..
or just convert them to N spaces?

- Grab introspection data for methods, arguments, class inheritance, etc..
should this be done in the parser, filled into the tree later, or added while rendering?

- Overview generations:
  All documents alphabetically
  All documents by categories
  All documents by keywords
  All classes by inheritance tree
  All classes alphabetically
  All classes by categories
  All ugens alphabetically
  All ugens by categories
  All methods

- Handle extensions (extra classes and method additions)
should merge stuff into the tree before parsing..

- HTML renderer.

VALIDATION
----------
docType must be the first tag, so that it can control which tags are allowed? Or do a separate validation pass afterwards?

Some tags should only be allowed once. like class, title, related, keywords, summary, description, methods, examples..
Keep a dictionary with tag occurence count?

THOUGHTS
========

- since inline[[ ]] tags dont nest currently, should they be modal?

- currently, table columns and list items are just separated by ## tags.
One could also put the items as children inside the ## tags.. would this be better? perhaps no..
Should we do the same for table row::? just put single row:: tags as separators instead of putting the columns
as children to row?

- tables, lists and numberedLists could have a single closing tag like ::end since the closing tags do the exact same thing.

- currently there's no support for nested inline tags. And is this really needed?

- all block-style tags should start the line.

- split prose in multiple elements by blank lines in the parser, or handle them in the renderer?


