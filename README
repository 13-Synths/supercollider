New SC documentation system, work in progress
=============================================
Much more information can be read here: https://docs.google.com/document/edit?id=13jY-FLhwFYgzGFVTSb31eTZOsxl77eVLxuCIsXcZ7BE&hl=en&authkey=CJu58MQJ

The markup language parser is in ScDoc.sc, copy or symlink this to your Extensions folder.
Try it like this:

p = ScDocParser.new
p.parseFile("/home/lijon/Coding/ScDoc/test.sch").dump
p.parse("inline code::code example::.").dump

TODO
====

- parser: Don't split by lines but pass newlines to handleWord and let it call endLine for us? and inc lineno..
important: then we must check if the whitespace-word contains newline... (or create a regex rule that matches single newlines?)
also let handleWord inc wordno..
note: we could then also match blank lines by regex "\n\n*" and pass them to handleWord to split prose or perhaps insert an internal
'blankline' tag?

- Grab introspection data for methods, arguments, class inheritance, etc..
should this be done in the parser, filled into the tree later, or added while rendering?

- Overview generations:
  All documents alphabetically
  All documents by categories
  All documents by keywords
  All classes by inheritance tree
  All classes alphabetically
  All classes by categories
  All ugens alphabetically
  All ugens by categories
  All methods

- Code to traverse a directory tree of doc source files and render into another directory tree, checking time-stamps to see if files need update or not.

- Handle extensions (extra classes and method additions)
should merge stuff into the tree before parsing..

- HTML renderer.

- split prose in multiple elements by blank lines in the parser, or handle them in the renderer?

VALIDATION
----------
docType must be the first tag, so that it can control which tags are allowed? Or do a separate validation pass afterwards?

Some tags should only be allowed once. like class, title, related, keywords, summary, description, methods, examples..
Keep a dictionary with tag occurence count?


