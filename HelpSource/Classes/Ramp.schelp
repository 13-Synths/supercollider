class:: Ramp
summary:: Linear lag.
related:: Classes/Lag, Classes/Lag2, Classes/Lag3
categories::  UGens>Filters>Linear


Description::

This is similar to  link::Classes/Lag::  but with a linear rather than
exponential lag. This is useful for smoothing out control signals.


classmethods::

method::ar, kr

argument::in

The input signal.


argument::lagTime

60 dB lag time in seconds.


argument::mul

Output will be multiplied by this value.


argument::add

This value will be added to the output.


Examples::

code::

Server.internal.boot;
(
// used to lag pitch
{
	SinOsc.ar(		// sine wave
		Ramp.kr(			// lag the modulator
			LFPulse.kr(4, 0, 0.5, 50, 400),	// frequency modulator
			Line.kr(0, 1, 15)				// modulate lag time
		), 
		0,	// phase
		0.3	// sine amplitude
	) 
}.scope;
)

// Compare
(
var pulse;
{
	pulse = LFPulse.kr(8.772);
	Out.kr(0,[Ramp.kr(pulse, 0.025), Lag.kr(pulse, 0.025), pulse]);
}.play(Server.internal);
Server.internal.scope(3, bufsize: 44100, rate: \control, zoom: 40);
)

::

