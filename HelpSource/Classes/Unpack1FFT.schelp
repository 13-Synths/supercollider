class:: Unpack1FFT
summary:: Unpack a single value (magnitude or phase) from an FFT chain
categories:: UGens>FFT
related:: Classes/PackFFT, Classes/UnpackFFT


Unpack1FFT(chain, bufsize, binindex, whichmeasure=0)

description::
Takes an FFT chain and extracts a single scalar value as a demand-rate stream. To call it, a "demander" is needed, which fires whenever the FFT chain fires - this is normally achieved using link::Classes/PackFFT:: but can also be done using link::Classes/Demand::.

Note::
This UGen is commonly not used directly. Its main purpose is as a component in link::Classes/PV_ChainUGen#-pvcollect::, link::Classes/PV_ChainUGen#-pvcalc::, and link::Classes/PV_ChainUGen#-pvcalc2:: processes. You're welcome to use it on its own - the example below shows how.
::

classmethods::
private:: categories

method:: new

argument:: chain
an FFT chain
argument:: bufsize
the size of the expected input FFT frames
argument:: binindex
the integer index of the bin you want to query
argument:: whichmeasure
0 for magnitude and 1 for phase. None of these arguments can be modulated.

examples::
code::

s.waitForBoot { c = Buffer.read(s, Platform.resourceDir +/+ "sounds/a11wlk01.wav") }


// Let's extract the DC component - i.e. the magnitude at index zero.
(
x = {
	var fftsize = 1024;
	var sig, chain, unp, trig, demand;

	sig = PlayBuf.ar(1, c, BufRateScale.kr(c), loop: 1);
	chain = FFT(LocalBuf(fftsize), sig);

	unp = Unpack1FFT(chain, bufsize: fftsize, binindex: 0, whichmeasure: 0);

	// Demand some data from the unpacker
	trig = chain >= 0;
	demand = Demand.kr(trig, 0, unp);
	demand.poll(trig);

	(sig * 0.1).dup;
}.play
)
x.free;
::

