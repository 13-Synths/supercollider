cmake_minimum_required (VERSION 2.6)
project (supernova)

enable_testing()

INCLUDE(CPack)


MACRO(CREATE_FINAL_FILE _filename)
  FILE(WRITE ${_filename} "//autogenerated file\n")
    FOREACH (_current_FILE ${ARGN})
      FILE(APPEND ${_filename} "#include \"${_current_FILE}\"\n")
    ENDFOREACH (_current_FILE)
ENDMACRO(CREATE_FINAL_FILE _filename)

option(COMPACT_BUILD "Enable all-in-one compilation.")
option(SSE "Compile with support for SSE instructions.")
# option(SSE2 "Compile with support for SSE2 instructions.")
option(SSE41 "Compile with support for SSE4.1 instructions.")
option(SSE42 "Compile with support for SSE4.2 instructions.")
option(MEMORY_DEBUGGING "Build for memory debugging (disable thread pools).")

if(CMAKE_COMPILER_IS_GNUCXX)
    option(NATIVE "Optimize binary for this architecture.")
    option(LTO "Use GCC's link time optimizer'.")
endif()

# custom paths
set(ADDITIONAL_PATH "" CACHE STRING "Additional search path")

if (ADDITIONAL_PATH)
    set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${ADDITIONAL_PATH})
endif()


# preprocessor paths
include_directories(source)
include_directories(libs
                    libs/boost
                    libs/boost_endian
                    libs/boost_lockfree
                    libs/boost_move
                    libs/nova-dsp
                    libs/nova-simd
                    libs/nova-tt
                    libs/oscpack
                    libs/pri_queue
                    libs/tlsf/src
                    )

include_directories(source/sc/supercollider/common/Headers/plugin_interface
                    source/sc/supercollider/common/Headers/common
                    source/sc/supercollider/common/Headers/server)


CONFIGURE_FILE(
  "${CMAKE_CURRENT_SOURCE_DIR}/cmake_modules/cmake_uninstall.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
  IMMEDIATE @ONLY)

ADD_CUSTOM_TARGET(uninstall
  "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")

if(CMAKE_COMPILER_IS_GNUCXX)
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ftemplate-depth-4096 -Wnon-virtual-dtor -Wstrict-overflow")
   set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -ffast-math -frename-registers -funsafe-loop-optimizations -Wunsafe-loop-optimizations -fomit-frame-pointer")

    if(SSE)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse -mfpmath=sse")
    endif()
    if(SSE41)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse4.1")
    endif()
    if(SSE42)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse4.2")
    endif()
    if(NATIVE)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native")
    endif()

endif(CMAKE_COMPILER_IS_GNUCXX)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake_modules/")

if(MEMORY_DEBUGGING)
    set_property(DIRECTORY .
                 APPEND
                 PROPERTY COMPILE_DEFINITIONS_DEBUG NOVA_MEMORY_DEBUGGING)
endif()

add_subdirectory (libs)
add_subdirectory (source)
add_subdirectory (testsuite)
